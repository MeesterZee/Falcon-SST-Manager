<!-- FALCON UI LIBRARY v3.3 -->
<!--
  Falcon UI Usage Help:
    Transitions: 0.2s

    Loading Indicator:
      HTML: <div id="loading-indicator"></div>
      Show/hide div as needed to toggle indicator
  
  
    Toast:
      HTML Usage: <div id="toast-container"></div> 
      Function Usage: 'showToast(title [optional], message, timeToShow)' 
      Full HTML markup allowed for title/message

  
    Alert Modal:
      HTML Usage: N/A
      Function Usage: 'showAlertModal(title, message, buttonText1[optional], buttonText2[optional])'
      Full HTML markup allowed for title/message

  
    Action Modal:
      HTML Usage:
        <dialog class="action-modal" id="myActionModal" [optional] data-select-reset-index="-1">
          <div class="action-header">My Action Modal
            <button class="action-close-btn"><i class="bi-close bi-x-circle-fill"></i></button>
          </div>
          <div class="action-container">
            <div class="action-content">
              ...
            </div>
            <div class="action-btn">
              <button id="myActionButton">My Action Button</button>
            </div>
          </div>
        </dialog>
      
      Function Usage: 'showActionModal(modalId)', 'closeActionModal(modalId)'
      Full HTML markup allowed for 'action-content'

  
    Sidebar:
      <div class="sidebar-container" id="sidebarContainer">
        <div class="sidebar">
          <div class="sidebar-header">
            <h2 id="sidebarTitle">
              ...
            </h2>
          </div>
          <div class="sidebar-content">
            <div class="sidebar-content" id="myContentId1"></div>
            <div class="sidebar-content" id="myContentId2"></div>
            ...
          </div>
        </div>
      </div>
      
      Function Usage: 'showSidebar(title, contentId)'
      Full HTML markup allowed for sidebar content
-->

<!-- CSS -->
<style>
  html, body {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    overflow: hidden; /* Hide scrollbars */
    font-family: 'Roboto', sans-serif;
    background-color: var(--page-background-color);
  }

  .red { background-color: var(--red); }
  .orange { background-color: var(--orange); }
  .yellow { background-color: var(--yellow); }
  .green { background-color: var(--green); }
  .light-green { background-color: var(--light-green); }
  .blue { background-color: var(--blue); }
  .pink { background-color: var(--pink); }
  .gray { background-color: var(--gray); }
  
  /* Hide default values in date/time inputs */
  input[type='date']:not(:focus):in-range::-webkit-datetime-edit-year-field,
  input[type='date']:not(:focus):in-range::-webkit-datetime-edit-month-field,
  input[type='date']:not(:focus):in-range::-webkit-datetime-edit-day-field,
  input[type='date']:not(:focus):in-range::-webkit-datetime-edit-text {
    color: transparent;
  }
  input[type='time']:not(:focus):in-range::-webkit-datetime-edit-hour-field,
  input[type='time']:not(:focus):in-range::-webkit-datetime-edit-minute-field,
  input[type='time']:not(:focus):in-range::-webkit-datetime-edit-ampm-field,
  input[type='time']:not(:focus):in-range::-webkit-datetime-edit-text {
    color: transparent;
  }

  /**************/
  /* ICON CLASS */
  /**************/
  .bi {
    vertical-align: .0125em;
    width: 1em;
    height: 1em;
    margin-right: 5px;
  }

  .bi-close {
    display: inline-block;
    width: 1em;
    height: 1em;
    line-height: 1; /* Prevent line-height issues */
    vertical-align: middle; /* Ensure vertical alignment */
  }

  .bi-attachment {
    vertical-align: .0125em;
    width: 1em;
    height: 1em;
    margin-right: 5px;
    color: var(--text-accent-color);
  }

  .sort-icon {
    margin-left: 5px;
  }

  /*******************/
  /* SCROLLBAR CLASS */
  /*******************/
  ::-webkit-scrollbar {
    width: 10px;
    height: 10px;
  }

  ::-webkit-scrollbar-track {
    background: transparent;
  }

  ::-webkit-scrollbar-thumb {
    background: var(--element-accent-color);
    border-radius: 10px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: var(--element-accent-color);
  }

  /***************************/
  /* LOADING INDICATOR CLASS */
  /***************************/
  #loading-indicator {
    display: block;
    position: fixed;
    top: 50%;
    left: 50%;
    width: 50px;
    height: 50px;
    margin-top: -25px;
    margin-left: -25px;
    border-radius: 50%;
    border: 6px solid var(--page-accent-color);
    border-top-color: var(--primary-color);
    animation: spin 1s infinite linear;
    z-index: 1;
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }

  /******************/
  /* MENU BAR CLASS */
  /******************/
  .menu-bar {
    background-color: var(--primary-color);
    position: relative;
    display: flex;
    justify-content: flex-start;
    overflow: hidden;
    cursor: default;
    padding: 10px 0 10px 0;
    transition: all 0.5s;
  }

  .menu-bar button {
    display: flex;
    background-color: inherit;
    width: 26px;
    margin: 0 20px 0 20px;
    padding: 0;
    border: none;
    cursor: pointer;
  }

  #menu-icon {
    width: 24px;
    margin: 3px auto;
    -webkit-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
    -webkit-transition: 0.5s ease-in-out;
    -moz-transition: 0.5s ease-in-out;
    -o-transition: 0.5s ease-in-out;
    transition: 0.5s ease-in-out;
    cursor: pointer;
  }

  #menu-icon span {
    display: block;
    position: absolute;
    height: 4px;
    width: 100%;
    background: var(--menu-icon-color);
    border-radius: 10px;
    opacity: 1;
    left: 0;
    -webkit-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
    -webkit-transition: 0.25s ease-in-out;
    -moz-transition: 0.25s ease-in-out;
    -o-transition: 0.25s ease-in-out;
    transition: 0.25s ease-in-out;
  }

  #menu-icon span:nth-child(1) {
    top: 0px;
  }

  #menu-icon span:nth-child(2),
  #menu-icon span:nth-child(3) {
    top: 8px;
  }

  #menu-icon span:nth-child(4) {
    top: 16px;
  }

  #menu-icon.open span:nth-child(1) {
    top: 8px;
    width: 0%;
    left: 50%;
  }

  #menu-icon.open span:nth-child(2) {
    -webkit-transform: rotate(45deg);
    -moz-transform: rotate(45deg);
    -o-transform: rotate(45deg);
    transform: rotate(45deg);
  }

  #menu-icon.open span:nth-child(3) {
    -webkit-transform: rotate(-45deg);
    -moz-transform: rotate(-45deg);
    -o-transform: rotate(-45deg);
    transform: rotate(-45deg);
  }

  #menu-icon.open span:nth-child(4) {
    top: 6px;
    width: 0%;
    left: 50%;
  }
  
  /****************/
  /* DIALOG CLASS */
  /****************/
  dialog {
    font-family: 'Roboto', sans-serif;
    font-size: 16px;
    background-color: var(--page-accent-color);
    padding: 0;
    border: none;
    border-radius: 10px;
    box-shadow: 0 0 6px rgba(0, 0, 0, 0.25);
    width: 450px;
    max-height: 85vh;
    overflow: hidden;
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
    z-index: 10;
  }

  dialog::backdrop {
    background: rgba(0, 0, 0, 0.5);
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
  }

  dialog.show, dialog.show::backdrop {
    opacity: 1;
  }

  dialog.close, dialog.close::backdrop {
    opacity: 0;
  }

  /*********************/
  /* ALERT MODAL CLASS */
  /*********************/
  .alert-container {
    padding: 10px;
  }

  .alert-title {
    font-size: 18px;
    font-weight: bold;
    margin-bottom: 10px;
  }

  .alert-message {
    margin-bottom: 20px;
  }

  .alert-btns {
    display: flex;
    justify-content: flex-end;
    margin-top: 20px;
  }

  .alert-btns button {
    font-size: 16px;
    font-weight: bold;
    margin-left: 10px;
    padding: 5px 20px;
    border: none;
    border-radius: 20px;
    background-color: var(--element-accent-color);
    color: var(--text-primary-color);
    cursor: pointer;
    transition: 0.5s;
  }

  .alert-btns button:first-child {
    margin-left: 0;
  }

  .alert-btns button:hover {
    background-color: var(--accent-color);
  }

  /**********************/
  /* ACTION MODAL CLASS */
  /**********************/
  .action-modal {
    /*Background hack to prevent bleed in corners from parent div */
    background: linear-gradient(transparent 0px, transparent 10px, var(--page-accent-color) 10px);
  }

  .action-header {
    font-size: 18px;
    font-weight: bold;
    position: sticky;
    top: 0;
    background-color: var(--primary-color);
    text-align: center;
    padding: 5px;
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
  }

  .action-close-btn {
    font-size: 20px;
    color: var(--text-primary-color);
    background: none;
    padding: 0;
    margin: 7px 10px 0 0;
    position: absolute;
    top: 0;
    right: 0;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    border: none;
    box-sizing: border-box;
    z-index: 10;
  }

  .action-container {
    padding: 15px 10px 0 10px;
    overflow: auto;
    max-height: calc(85vh - 54px);
  }

  .action-content {
    margin-bottom: 20px;
  }

  .action-btn {
    display: flex;
    justify-content: center;
  }

  .action-btn button {
    font-size: 16px;
    font-weight: bold;
    width: 70%;
    padding: 5px 20px;
    border: none;
    border-radius: 20px;
    background-color: var(--element-accent-color);
    color: var(--text-primary-color);
    cursor: pointer;
    transition: 0.5s;
  }

  .action-btn button:hover {
    background-color: var(--accent-color);
  }

  /*****************/
  /* SIDEBAR CLASS */
  /*****************/
  .sidebar-container {
    display: flex;
    flex-direction: column;
    flex-basis: 0px;
    width: 320px;
    flex-shrink: 0;
    align-items: flex-start;
    overflow: hidden;
    transition: flex-basis 0.2s ease-in-out;
    margin-left: -20px;
    padding-right: 20px;
  }

  .sidebar-container.show {
    flex-basis: 320px; /* Expands to take up space */
  }

  .sidebar {
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    background: linear-gradient(transparent 0%, transparent 2%, var(--page-accent-color) 2%);
    border-radius: 10px;
    box-shadow: 0 0 6px rgba(0, 0, 0, 0.25);
    display: flex;
    width: 300px;
    min-width: 300px;
    max-height: calc(100vh - 128px);
    margin: 20px;
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
  }

  .sidebar-container.show .sidebar {
    opacity: 1;
  }

  .sidebar-header {
    font-size: 18px;
    font-weight: bold;
    position: sticky;
    top: 0;
    background-color: var(--primary-color);
    text-align: center;
    padding: 5px;
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
  }

  .sidebar-close-btn {
    font-size: 20px;
    color: var(--text-primary-color);
    background: none;
    padding: 0;
    margin: 7px 10px 0 0;
    position: absolute;
    top: 0;
    right: 0;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    border: none;
    box-sizing: border-box;
    z-index: 10;
  }

  .sidebar-content-container {
    padding: 15px 10px 20px 10px;
    overflow: auto;
  }

  .sidebar-content {
    display: none;
  }

  .sidebar-content.show {
    display: block;
  }

  /***************/
  /* TOAST CLASS */
  /***************/
  #toast-container {
    position: fixed;
    bottom: 10px;
    right: 10px;
    max-width: 25%;
    z-index: 15;
    display: none;
    flex-direction: column;
    align-items: flex-end;
    pointer-events: none;
  }

  .toast-title {
    font-size: 18px;
    font-weight: bold;
    margin-bottom: 10px;
  }

  .toast {
    font-family: 'Roboto', sans-serif;
    font-size: 16px;
    background-color: var(--page-background-color);
    padding: 10px;
    border-radius: 10px;
    opacity: 0;
    box-shadow: 0 0 6px rgba(0, 0, 0, 0.25);
    display: inline-block;
    margin-top: 5px;
    transition: opacity 0.2s ease-in-out;
    pointer-events: auto;
  }

  .toast.show {
    opacity: 1;
  }

  .toast.hide {
    opacity: 0;
  }

  /***********************/
  /* TOGGLE SWITCH CLASS */
  /***********************/
  .switch-container {
    background-color: var(--element-background-color);
    border: 1px solid var(--element-accent-color);
    border-radius: 10px;
    padding-left: 5px;
    font-size: 16px;
  }

  .switch {
    position: relative;
    display: inline-block;
    width: 30px;
    height: 16px; /* Reduced by 2px to match text bottom */
    vertical-align: -1px; /* Keep this the same to maintain top alignment */
    margin-right: 10px;
    margin-left: 0;
    margin-top: 7px;
    margin-bottom: 7px;
  }

  .switch input { 
    opacity: 0;
    width: 0;
    height: 0;
  }

  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--element-accent-color);
    transition: 0.2s;
    border-radius: 34px;
  }

  .slider:before {
    position: absolute;
    content: "";
    height: 12px; /* Adjusted for new switch height */
    width: 12px;
    left: 2px;
    bottom: 2px;
    background-color: white;
    transition: 0.2s;
    border-radius: 50%;
  }

  input:checked + .slider {
      background-color: var(--primary-color);
  }

  input:checked + .slider:before {
      transform: translateX(14px);
  }

  /***************/
  /* CHART CLASS */
  /***************/
  #chart-container {
    background-color: var(--element-background-color);
    margin: 10px 0 0 0;
    padding: 5px;
    height: 100%;
    border: 1px solid var(--element-accent-color);
    border-radius: 10px;
    box-sizing: border-box;
  }

  #chart-div {
    width: 100%;
    height: 100%;
  }

  /* Chart pagination text */
  #chart-div text {
    fill: var(--text-primary-color);
  }

  /* Chart pagination arrows */
  #chart-div path {
    fill: var(--element-accent-color);
  }

  /* Use HTML tooltips to override default styles */
  .google-visualization-tooltip {
    background-color: var(--element-background-color) !important;
    font-color: var(--text-primary-color) !important;
    border: solid 2px var(--element-accent-color) !important;
    border-radius: 5px !important;
    box-shadow: none !important;
  }

  /* Tooltip text color */
  div.google-visualization-tooltip > ul > li > span {
    color: var(--text-primary-color) !important;
  }

  /*****************/
  /* NAV BAR CLASS */
  /*****************/
  .nav-link {
    font-weight: bold;
    font-size: 18px;
    float: left;
    display: block;
    color: var(--text-primary-color);
    text-align: center;
    padding: 10px 15px 10px 15px;
    text-decoration: none;
    transition: all 0.5s;
    margin: 0px 5px 0 5px;
    border-radius: 10px 10px 0 0;
  }

  .nav-button {
    font-weight: bold;
    font-size: 18px;
    color: var(--text-primary-color);
    float: left;
    display: block;
    background-color: inherit;
    text-align: center;
    padding: 10px 15px 10px 15px;
    border: none;
    cursor: pointer;
    transition: all 0.5s;
    margin: 0px 5px 0 5px;
    border-radius: 10px 10px 0 0;
  }

  .nav-link:hover, .nav-button:hover {
    background-color: var(--page-accent-color);
  }
  
  .nav-bar {
    background-color: var(--primary-color);
    position: relative;
    height: 0;
    overflow: hidden;
    justify-content: flex-start;
    margin: 0;
    transition: height 0.5s ease, visibility 0s linear 0.5s;
  }

  .nav-bar.show {
    height: 41px;
  }

  .nav-link.active {
    background-color: var(--page-accent-color);
  }

  /******************/
  /* TOOL BAR CLASS */
  /******************/
  #toolbar {
    display: none;
  }

  .tool-bar {
    overflow: hidden;
    background-color: var(--page-accent-color);
    box-shadow: 0 0 6px rgba(0, 0, 0, 0.25);
  }

  .tool-bar-button {
    float: left;
    font-size: 18px;
    font-weight: bold;
    color: var(--text-primary-color);
    background-color: var(--page-accent-color);
    border: none;
    padding: 5px 15px 5px 15px;
    text-align: center;
    cursor: pointer;
    transition: all 0.5s;
    margin: 5px;
    border-radius: 10px;
  }

  .tool-bar-button:hover {
    background-color: var(--accent-color);
  }

  .tool-bar-button-unsaved {
    background-color: var(--accent-color);
  }

  .menu-button:focus, .nav-button:focus, .tool-bar-button:focus {
    outline: none;
  }

  /*******************/
  /* DROP DOWN CLASS */
  /*******************/
  .dropdown {
    float: left;
    overflow: hidden;
  }
  
  .dropdown-button {
    font-size: 18px;
    font-weight: bold;
    color: var(--text-primary-color);
    background-color: var(--page-accent-color);
    border: none;
    padding: 5px 15px 5px 15px;
    text-align: center;
    cursor: pointer;
    transition: all 0.5s;
    margin: 5px;
    border-radius: 10px;
  }

  .dropdown-content {
    display: none;
    position: absolute;
    background-color: var(--page-accent-color);
    box-shadow: 0 5px 10px -5px rgba(0, 0, 0, .25); /* Vertical shift down 5px, spread 11px, shrink -3px */
    border-radius: 0 0 10px 10px;
    overflow: hidden;
    z-index: 3;
    padding-right: 10px;
  }

  .dropdown-content button {
    float: none;
    display: block;
    width: 100%;
    font-size: 18px;
    color: var(--text-primary-color);
    background-color: var(--page-accent-color);
    border: none;
    padding: 5px 15px 5px 15px;
    text-align: left;
    cursor: pointer;
    transition: all 0.5s;
    margin: 5px;
    border-radius: 10px;
  }

  .dropdown-content button:hover,
  .dropdown-button:hover {
    background-color: var(--accent-color);
  }

  .dropdown:hover .dropdown-content,
  .dropdown.active .dropdown-content {
    display: block;
  }

  .dropdown:hover .dropdown-button,
  .dropdown.active .dropdown-button {
    background-color: var(--accent-color);
  }

  /**************/
  /* TEXT CLASS */
  /**************/
  h1 {
    font-size: 22px;
    background-color: transparent;
    text-align: center;
    margin: 0;
    padding: 1px 0 0 0;
  }

  h2 {
    font-size: 16px;
    color: var(--text-primary-color);
    background-color: var(--element-accent-color);
    text-align: center;
    margin: 0;
    padding: 5px;
    cursor: default;
  }

  h2.rounded-top {
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
  }

  h2.rounded-full {
    border-radius: 10px;
    margin-bottom: 10px;
  }
    
  /***************/
  /* LABEL CLASS */
  /***************/
  label {
    font-size: 16px;
    color: var(--text-primary-color);
    margin-bottom: 2px;
  }

  label .input-label {
    display: block;
    font-size: 16px;
    color: var(--text-primary-color);
    margin-bottom: 2px;
  }

  .label-text {
    display: block;
    font-size: 16px;
    color: var(--text-primary-color);
    margin-bottom: 2px;
  }

  input {
    -webkit-appearance: none;
    appearance: none;
    font-family: 'Roboto', sans-serif;
    font-size: 16px;
    background-color: var(--element-background-color);
    color: var(--text-primary-color);
  }

  input::placeholder {
    color: var(--text-accent-color);
  }

  select {
    font-family: 'Roboto', sans-serif;
    font-size: 16px;
    background-color: var(--element-background-color);
    color: var(--text-primary-color);
  }

  select:disabled {
    appearance: none;  /* For most browsers */
    -webkit-appearance: none;  /* For Chrome/Safari */
    -moz-appearance: none;  /* For Firefox */
    color: black !important;
    opacity: 1;
  }

  /***************/
  /* TABLE CLASS */
  /***************/
  .table-wrapper {
    overflow-y: auto;
    display: flex;
    flex-direction: column;
	}

	table {
    border-spacing: 0;
		border-collapse: collapse;
		width: 100%;
		background-color: var(--element-accent-color);
		/* table-layout: fixed; // Toggle on for non-scrolling tables, off for horizontal scrolling */
	}

	thead th {
		position: sticky;
		top: 0;
		background-color: var(--element-accent-color);
		color: var(--text-primary-color);
    text-align: left;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    z-index: 1;
	}

	th, td {
		font-size: 16px;
    padding: 5px;
    text-align: left;
    box-sizing: border-box;
		text-align: left;
	}

  tbody td {
    background-color: var(--element-background-color);
		color: var(--text-primary-color);
    transition: background-color 0.2s ease;
  }

  tbody tr {
    border-bottom: 1px solid var(--element-accent-color);
  }

  tbody tr:hover td {
    background-color: var(--element-accent-color);
  }
  
  tbody tr:last-child {
    border-bottom: none; /* optional: cleaner bottom edge */
  }

  .freeze-col-1 {
    position: sticky;
    left: 0;
    width: 40px !important;
    min-width: 40px !important;
    max-width: 40px !important;
    flex-grow: 0;
  }

  .freeze-col-2 {
    position: sticky;
    left: 40px;
    width: 200px !important;
    min-width: 200px !important;
    max-width: 200px !important;
  }

  th.freeze-col-1, th.freeze-col-2 {
    z-index: 2;
  }
  
  td.freeze-col-1, td.freeze-col-2 {
    z-index: 1;
  }

  td:not(.freeze-col-1):not(.freeze-col-2) {
    min-width: 200px;
  }
  
  /* Table inputs */
  
  .table-select {
    width: 100%;
    box-sizing: border-box;
    border-radius: 5px;
    border: none;
    background-color: var(--element-background-color);
    color: var(--text-primary-color);
    padding-left: 0px;
    height: 20px;
  }
    
  .table-input[type=text], .table-input[type=tel] {
    width: 100%;
    box-sizing: border-box;
    border-radius: 5px;
    border: none;
    background-color: var(--element-background-color);
    color: var(--text-primary-color);
    padding-left: 4px;
    height: 20px;
  }

  .table-input[type=date], .table-input[type=time] {
    width: 100%;
    box-sizing: border-box;
    border-radius: 5px;
    border: none;
    background-color: var(--element-background-color);
    color: var(--text-primary-color);
    padding-left: 3px;
    height: 20px;
  }

  .table-input[type=color] {
    width: 100%;
    box-sizing: border-box;
    border-radius: 5px;
    border: none;
    background-color: var(--element-background-color);
    padding: 0 4px 0 4px;
    height: 20px;
  }

  /* Webkit specific styling for the text inside the date/time input box */
  input::-webkit-date-and-time-value {
    text-align: left;
    padding-left: 3px;
  }

  /* Align the time input icon to fix misalignment */
  .table-input[type="time"]::-webkit-calendar-picker-indicator {
    margin-right: -1px;
  }

  input[type="color"]::-webkit-color-swatch {
    border: 1px solid var(--element-accent-color);
  }

  /* No header tables (forms, settings, etc.) */
  .no-header-table-wrapper {
    margin-bottom: 20px;
  }
  
  .no-header-table {
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
    overflow: hidden;
    border: 1px solid var(--element-accent-color); /* one border around the whole table */
    table-layout: fixed; // Toggle on for non-scrolling tables, off for horizontal scrolling
  }

  .no-header-table td {
    overflow: hidden;
    border: 1px solid var(--element-accent-color); /* thinner inner borders */
    white-space: nowrap;
    text-overflow: ellipsis;
  }

  .table-wrapper-fixed {
    overflow: hidden;
    border: 1px solid var(--element-accent-color); /* one border around the whole table */
    border-radius: 10px;
    table-layout: fixed; // Toggle on for non-scrolling tables, off for horizontal scrolling
  }

  .table-fixed {
    border-spacing: 0;
		border-collapse: collapse;
		width: 100%;
		background-color: var(--element-accent-color);
		color: white;
		table-layout: fixed;
  }

  /* Disable hover for .no-header-table and .table-fixed */
  .no-header-table tbody tr:hover td,
  .table-fixed tbody tr:hover td {
    background-color: var(--element-background-color) !important;
  }

  /****************/
  /* COLUMN CLASS */
  /****************/
  .page-container {
    display: none; /* Display flex to show */
    width: 100%;
    justify-content: space-between;
    height: calc(100vh - 88px);
    box-sizing: border-box;
  }

  .column-container {
    display: flex;
    flex-grow: 1;
    gap: 20px;
    padding: 20px;
    justify-content: center;
    align-items: flex-start;
    min-width: 0;
    transition: flex 0.2s ease-in-out;
  }

  .column {
    width: 100%;
    max-height: calc(100vh - 128px); /* Adjust based on your specific page margins */
    overflow: hidden;
    background: linear-gradient(transparent 0%, transparent 2%, var(--page-accent-color) 2%);
    border-radius: 10px;
    box-shadow: 0 0 6px rgba(0, 0, 0, 0.25);
    display: flex;
    flex-direction: column;
  }

  .column-header {
    font-size: 18px;
    font-weight: bold;
    position: sticky;
    top: 0;
    background-color: var(--primary-color);
    text-align: center;
    padding: 5px;
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
  }

  .column-body {
    flex: 1;
    overflow-y: auto;
    overflow-x: hidden;
    padding-bottom: 20px;
    padding: 15px 10px 20px 10px;
    display: flex; /* Change to block for full height column bodies */
    flex-direction: column;
  }

  .column-toolbar {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
  }

  .column-toolbar button {
    color: var(--text-primary-color);
    background-color: var(--page-accent-color);
    text-align: center;
    cursor: pointer;
    transition: all 0.5s;
    margin-left: 2px;
    padding: 7px 0 7px 0;
    border: none;
    height: 34px;
  }

  .column-toolbar button i {
    font-size: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .column-input {
    width: 100%;
    box-sizing: border-box;
    padding-left: 5px;
    border-radius: 10px;
    border: 1px solid var(--element-accent-color);
    height: 34px;
  }

  .column-select {
    width: 100%;
    box-sizing: border-box;
    border-radius: 10px;
    border: 1px solid var(--element-accent-color);
    height: 34px;
  }

  textarea {
    display: block;
    margin: 0;
  }

  .column-textarea {
    margin-bottom: 20px;
    font-family: 'Roboto', sans-serif;
    font-size: 16px;
    background-color: var(--element-background-color);
    padding: 5px;
    width: 100%;
    height: 300px;
    box-sizing: border-box;
    overflow: scroll;
    overflow-x: hidden;
    resize: none;
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
    border: 1px solid var(--element-accent-color);
  }

  /*****************/
  /* DETAILS CLASS */
  /*****************/
  details summary {
    font-size: 18px;
    font-weight: bold;
    color: var(--text-primary-color);
    background-color: var(--element-accent-color);
    border: none;
    padding: 5px 15px 5px 15px;
    text-align: left;
    cursor: pointer;
    margin-bottom: 10px;
    border-radius: 10px;
    transition: all 0.5s;
  }

  details summary:hover {
    background-color: var(--accent-color);
  }

  details[open] summary {
    background-color: var(--accent-color);
  }

  .section-container {
    margin-bottom: 10px;
    border-radius: 10px;
    overflow: hidden;
  }

  .section-title {
    text-align: center;
    font-weight: bold;
    border-bottom: 1px solid black;
    padding: 5px;
    margin: 0;
  }

  .section-content {
    margin: 0;
    padding: 5px;
  }
  
  /****************/
  /* SEARCH CLASS */
  /****************/
  .search-container {
    position: relative;
    margin-bottom: 20px;
    width: 100%;
  }

  .search-container input[type="text"] {
    width: 100%;
    padding: 10px;
    padding-left: 26px;
    box-sizing: border-box;
    border: none;
    height: 34px;
    border-radius: 10px;
    border: 1px solid var(--element-accent-color);
  }

  .search-container .search-icon {
    position: absolute;
    left: 7px;
    top: 50%;
    transform: translateY(-50%);
    pointer-events: none;
    color: var(--text-primary-color);
  }

  /****************/
  /* MISC CLASSES */
  /****************/
  .rich-text-box {
    background-color: var(--element-background-color);
    padding: 5px;
    height: 250px;
    box-sizing: border-box;
    overflow: scroll;
    overflow-wrap: break-word;
    overflow-x: hidden;
    border-radius: 10px;
    border: 1px solid var(--element-accent-color);
    margin-bottom: 20px;
  }

  .warning {
    padding: 0 10px; /* Remove vertical padding */
    box-sizing: border-box;
    background-color: var(--orange);
    border: none;
    border-radius: 10px;
    height: 34px;
    display: flex;
    align-items: center; /* Vertically center content */
  }

  .warning i {
    margin-right: 5px; /* Optional: spacing between icon and text */
    vertical-align: middle; /* Override Bootstrap's vertical align */
    align-self: center; /* Ensure it follows flexbox vertical alignment */
    width: auto; /* Override Bootstrap's width */
    height: auto; /* Override Bootstrap's height */
  }

  .javascript-code {
    display: none !important;
  }

  .evaluation-item, .screening-item, .submission-item, .acceptance-item {}

  .item-hide { 
    display: none;
  }

  .rectangle {
    height: 96px;
    width: calc(100% - 140px);
    color: var(--text-primary-color);
    background-color: var(--element-background-color);
    border-radius: 10px;
    border: 1px solid var(--element-accent-color);
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin: 10px 70px 20px 70px;
  }
</style>

<!-- JAVASCRIPT FUNCTIONS -->
<script type="text/javascript">

  function showToast(title = '', message, time = 5000) {
    const toastContainer = document.getElementById('toast-container');
    const toast = document.createElement('div');
    toast.className = 'toast';
    
    if (title) {
      const titleElement = document.createElement('div');
      titleElement.className = 'toast-title';
      titleElement.textContent = title;
      toast.appendChild(titleElement);
    }

    const messageElement = document.createElement('div');
    messageElement.className = 'toast-message';
    messageElement.textContent = message;
    toast.appendChild(messageElement);
    
    // Set pointer-events to 'auto' only for the toast, not the container
    toast.style.pointerEvents = 'auto';
    
    toastContainer.appendChild(toast);
    
    // Force a reflow to ensure the initial state is applied before adding 'show'
    void toast.offsetWidth;
    
    toast.classList.add('show');
    
    setTimeout(() => {
      toast.classList.remove('show');
      toast.classList.add('hide');

      toast.addEventListener('transitionend', () => {
        toast.remove();
        if (toastContainer.childElementCount === 0) {
          toastContainer.style.display = 'none';
        }
      }, { once: true });
    }, time);

    // Ensure the container is visible
    toastContainer.style.display = 'flex';
  }

  function showAlertModal(title, message, buttonText1 = '', buttonText2 = '') {
    return new Promise((resolve) => {
      // Create dialog element
      const dialog = document.createElement('dialog');
      dialog.id = 'alert-modal';
        
      // Create alert container
      const alertContainer = document.createElement('div');
      alertContainer.className = 'alert-container';
        
      // Create title element
      if (title) {
        const titleElement = document.createElement('div');
        titleElement.className = 'alert-title';
        titleElement.innerHTML = title;
        alertContainer.appendChild(titleElement);
      }
        
      // Create message element
      const messageElement = document.createElement('div');
      messageElement.className = 'alert-message';
      messageElement.innerHTML = message;
      alertContainer.appendChild(messageElement);
        
      // Create button container
      const buttonContainer = document.createElement('div');
      buttonContainer.className = 'alert-btns';
        
      // Create buttons
      if (buttonText1) {
        const button1 = document.createElement('button');
        button1.textContent = buttonText1;
        button1.addEventListener('click', () => {
          closeAlertModal(dialog, resolve, buttonText1);
        });
        buttonContainer.appendChild(button1);
      }
        
      if (buttonText2) {
        const button2 = document.createElement('button');
        button2.textContent = buttonText2;
        button2.addEventListener('click', () => {
          closeAlertModal(dialog, resolve, buttonText2);
        });
        buttonContainer.appendChild(button2);
      }
        
      alertContainer.appendChild(buttonContainer);
      dialog.appendChild(alertContainer);
      document.body.appendChild(dialog);
        
      // Show dialog
      dialog.showModal();
      dialog.classList.add('show');
    });
  }

  function closeAlertModal(dialog, resolve, result) {
    dialog.classList.remove('show');
    dialog.classList.add('close');
    
    setTimeout(() => {
      dialog.remove();
      resolve(result);
    }, 200); // Match the CSS transition duration*/
  }

  function showActionModal(modalId) {
    const actionModal = document.getElementById(modalId);

    const closeButton = actionModal.querySelector('.action-close-btn');

    closeButton.onclick = () => closeActionModal(modalId);

    actionModal.showModal();
    actionModal.classList.add('show');
  }

  function closeActionModal(modalId) {
    const actionModal = document.getElementById(modalId);
    
    actionModal.classList.remove('show');
    actionModal.classList.add('close');
    
    setTimeout(() => {
      resetActionModal(modalId);
      actionModal.close();
      actionModal.classList.remove('close');
    }, 200); // Match the CSS transition duration*/
  }

  function resetActionModal(modalId) {
    const actionModal = document.getElementById(modalId);

    // Get the select reset index value
    const selectResetIndex = actionModal.getAttribute('data-select-reset-index');
    const resetIndex = selectResetIndex !== null ? Number(selectResetIndex) : 0;
    
    // Reset all input box values
    actionModal.querySelectorAll('input').forEach(input => input.value = "");
    actionModal.querySelectorAll('.rich-text-box').forEach(textBox => textBox.innerHTML = "");

    // Reset all select box values
    actionModal.querySelectorAll('select').forEach(select => select.selectedIndex = resetIndex);

    // Reset all toggle switches
    actionModal.querySelectorAll('input[type="checkbox"]').forEach(checkbox => checkbox.checked = false);

    // Reset scroll position
    actionModal.querySelector('.action-container').scrollTop = 0;

    // Reset label preview (only needed for AutoRoster)
    if (modalId == 'exportLabelsModal') {
      document.getElementById('labelRow1').innerHTML = "<b>Student Name</b>";
      document.getElementById('labelRow2').innerHTML = "";
    }
  }

  function showSidebar(title, contentId) {
    const sidebarContainer = document.getElementById('sidebarContainer');
    const sidebarTitle = document.getElementById('sidebarTitle');
    const sidebarContents = document.querySelectorAll('.sidebar-content');
    const selectedContent = document.getElementById(contentId);

    // Set the sidebar content
    sidebarContents.forEach(content => content.classList.remove('show'));
    selectedContent.classList.add('show');

    // Update sidebar title without removing the close button
    sidebarTitle.textContent = title;

    // Show the sidebar
    sidebarContainer.classList.add('show');

    // Add event listener for sidebar close button
    const closeButton = sidebarContainer.querySelector('.sidebar-close-btn');
    closeButton.onclick = closeSidebar;
  }

  function closeSidebar() {
    document.getElementById('sidebarContainer')?.classList.remove('show');
  }

</script>
